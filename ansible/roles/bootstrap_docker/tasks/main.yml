- name: Boostrap docker
  become: true
  tags:
    - install_docker
  block:
    - name: Install packages required for docker
      ansible.builtin.package:
        name: "{{ bootstrap_docker_preparation_packages[ansible_os_family] }}"
        state: present
      when: bootstrap_docker_preparation_packages[ansible_os_family] is defined

    - name: Add docker key for Debian
      ansible.builtin.apt_key:
        url: "{{ bootstrap_docker_gpg_key_url[ansible_os_family] }}"
        state: present
      when: bootstrap_docker_gpg_key_url[ansible_os_family] is defined and ansible_os_family == "Debian"

    - name: Add docker repository for Debian
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release|lower }} stable"
        state: present
      when: ansible_os_family == "Debian"
      notify: Update cache Debian

    - name: Install docker
      ansible.builtin.package:
        name: "{{ bootstrap_docker_packages[ansible_os_family] }}"
        state: present
      when: bootstrap_docker_packages[ansible_os_family] is defined
      notify:
        - Enable docker
        - Start docker

- name: Install package for ansible docker
  tags: post_install_docker
  block:
    - name: Instal pip3 for debian
      ansible.builtin.package:
        name: "python3-pip"
        state: present
      when: ansible_os_family == "Debian"

    - name: Install pip for Archlinux
      ansible.builtin.package:
        name: "python-pip"
        state: present
      when: ansible_os_family == "Archlinux"

    - name: Install python docker for Archlinux
      ansible.builtin.package:
        name: "python-docker"
        state: present
      when: ansible_os_family == "Archlinux"

    - name: Install python docker for Debian
      ansible.builtin.pip:
        name: "python-docker"
        state: present
        extra_args: "--user --break-system-packages"
      when: ansible_os_family == "Debian"
